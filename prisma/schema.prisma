
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB")
}

model User {
  id        Int   @id @default(autoincrement())
  email     String   @unique
  name      String
  password String 
  address String?
  gender  String?
  phone    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart     Cart? 
  orders   Orders[]
}

model Cart {
  id        Int   @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  items     CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        Int   @id @default(autoincrement())
  name      String
  description String
  stock     Int
  price     Float
  image     String
  cartItems CartItem[]
  orderDetails OrderDetails[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        Int   @id @default(autoincrement())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int      
  product   Product  @relation(fields: [productId], references: [id])
  productId Int      
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Orders {
  id        Int   @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  orderDetails OrderDetails[]
  status    OrderStatus @default(PENDING)
  amount   Float 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderDetails {
  id        Int   @id @default(autoincrement())
  order     Orders  @relation(fields: [orderId], references: [id])
  orderId   Int      
  product   Product  @relation(fields: [productId], references: [id])
  productId Int      
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  CONFIRMED
  DELIVERED
}